
package cliente;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "SoapAsyncWs", targetNamespace = "http://ws/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface SoapAsyncWs {


    /**
     * 
     * @param arg0
     * @return
     *     returns cliente.Factura
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "obtenerFactura", targetNamespace = "http://ws/", className = "cliente.ObtenerFactura")
    @ResponseWrapper(localName = "obtenerFacturaResponse", targetNamespace = "http://ws/", className = "cliente.ObtenerFacturaResponse")
    @Action(input = "http://ws/SoapAsyncWs/obtenerFacturaRequest", output = "http://ws/SoapAsyncWs/obtenerFacturaResponse")
    public Factura obtenerFactura(
        @WebParam(name = "arg0", targetNamespace = "")
        Long arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.Long
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "procesarFactura", targetNamespace = "http://ws/", className = "cliente.ProcesarFactura")
    @ResponseWrapper(localName = "procesarFacturaResponse", targetNamespace = "http://ws/", className = "cliente.ProcesarFacturaResponse")
    @Action(input = "http://ws/SoapAsyncWs/procesarFacturaRequest", output = "http://ws/SoapAsyncWs/procesarFacturaResponse")
    public Long procesarFactura(
        @WebParam(name = "arg0", targetNamespace = "")
        Factura arg0);

}
